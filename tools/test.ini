[general]
default_feed_rate = 4000 # Default speed (mm/minute) for G1/G2/G3 moves
default_seek_rate = 4000 # Default speed (mm/minute) for G0 moves
mm_per_arc_segment = 0.0 # Fixed length for line segments that divide arcs, 0 to disable
mm_max_arc_error = 0.01 # The maximum error for line segments that divide arcs 0 to disable
# = the maximum and minimum power levels specified above
alpha_steps_per_mm = 80 # Steps per mm for alpha ( X ) stepper
beta_steps_per_mm = 80 # Steps per mm for beta ( Y ) stepper
gamma_steps_per_mm = 1600 # Steps per mm for gamma ( Z ) stepper
acceleration = 3000 # Acceleration in mm/second/second.
junction_deviation = 0.05 # See http://smoothieware.org/motion-control#junction-deviation
x_axis_max_speed = 30000 # Maximum speed in mm/min
y_axis_max_speed = 30000 # Maximum speed in mm/min
z_axis_max_speed = 300 # Maximum speed in mm/min
alpha_step_pin = 2.0 # Pin for alpha stepper step signal
alpha_dir_pin = 0.5 # Pin for alpha stepper direction, add '!' to reverse direction
alpha_en_pin = 0.4 # Pin for alpha enable pin
alpha_current = 1.5 # X stepper motor current
alpha_max_rate = 30000.0 # Maximum rate in mm/min
beta_step_pin = 2.1 # Pin for beta stepper step signal
beta_dir_pin = 0.11 # Pin for beta stepper direction, add '!' to reverse direction
beta_en_pin = 0.10 # Pin for beta enable
beta_current = 1.5 # Y stepper motor current
beta_max_rate = 30000.0 # Maxmimum rate in mm/min
gamma_step_pin = 2.2 # Pin for gamma stepper step signal
gamma_dir_pin = 0.20 # Pin for gamma stepper direction, add '!' to reverse direction
gamma_en_pin = 0.19 # Pin for gamma enable
gamma_current = 1.5 # Z stepper motor current
gamma_max_rate = 300.0 # Maximum rate in mm/min
delta_current = 1.5 # First extruder stepper motor current
laser_module_enable = false # Whether to activate the laser module at all
laser_module_pwm_pin = 2.5 # This pin will be PWMed to control the laser.
endstops_enable = true # The endstop module is enabled by default and can be disabled here
alpha_min_endstop = 1.24^ # Pin to read min endstop, add a ! to invert if endstop is NO connected to ground
alpha_homing_direction = home_to_min # Or set to home_to_max and set alpha_max and uncomment the alpha_max_endstop
alpha_min = 0 # This gets loaded as the current position after homing when home_to_min is set
alpha_max = 200 # This gets loaded as the current position after homing when home_to_max is set
beta_min_endstop = 1.26^ # Pin to read min endstop, add a ! to invert if endstop is NO connected to ground
beta_homing_direction = home_to_min # Or set to home_to_max and set alpha_max and uncomment the alpha_max_endstop
beta_min = 0 # This gets loaded as the current position after homing when home_to_min is set
beta_max = 200 # This gets loaded as the current position after homing when home_to_max is set
gamma_min_endstop = 1.28^ # Pin to read min endstop, add a ! to invert if endstop is NO connected to ground
gamma_homing_direction = home_to_min # Or set to home_to_max and set alpha_max and uncomment the alpha_max_endstop
gamma_min = 0 # This gets loaded as the current position after homing when home_to_min is set
gamma_max = 200 # This gets loaded as the current position after homing when home_to_max is set
alpha_max_travel = 500 # Max travel in mm for alpha/X axis when homing
beta_max_travel = 500 # Max travel in mm for beta/Y axis when homing
gamma_max_travel = 500 # Max travel in mm for gamma/Z axis when homing
alpha_fast_homing_rate_mm_s = 50 # Alpha/X fast homing feedrate in mm/second
alpha_slow_homing_rate_mm_s = 25 # Alpha/X slow homing feedrate in mm/second
beta_fast_homing_rate_mm_s = 50 # Beta/Y fast homing feedrate in mm/second
beta_slow_homing_rate_mm_s = 25 # Beta/Y slow homing feedrate in mm/second
gamma_fast_homing_rate_mm_s = 4 # Gamma/Z fast homing feedrate in mm/second
gamma_slow_homing_rate_mm_s = 2 # Gamma/Z slow homing feedrate in mm/second
alpha_homing_retract_mm = 5 # Distance to retract from the endstop after it is hit for alpha/X
beta_homing_retract_mm = 5 # Distance to retract from the endstop after it is hit for beta/Y
gamma_homing_retract_mm = 1 # Distance to retract from the endstop after it is hit for gamma/Z
second_usb_serial_enable = false # This enables a second USB serial port
kill_button_enable = true # Set to true to enable a kill button
kill_button_pin = 2.12 # Kill button pin. default is same as pause button 2.12 (2.11 is another good choice)
currentcontrol_module_enable = true # Control stepper motor current via the configuration file

[extruder]
hotend.enable = true # Whether to activate the extruder module at all. All configuration is ignored if false
hotend.steps_per_mm = 140 # Steps per mm for extruder stepper
hotend.default_feed_rate = 600 # Default rate ( mm/minute ) for moves where only the extruder moves
hotend.acceleration = 500 # Acceleration for the stepper motor mm/secÂ²
hotend.max_speed = 50 # Maximum speed in mm/s
hotend.step_pin = 2.3 # Pin for extruder step signal
hotend.dir_pin = 0.22 # Pin for extruder dir signal ( add '!' to reverse direction )
hotend.en_pin = 0.21 # Pin for extruder enable signal

[temperature_control]
hotend.enable = true # Whether to activate this ( "hotend" ) module at all.
hotend.thermistor_pin = 0.23 # Pin for the thermistor to read
hotend.heater_pin = 2.7 # Pin that controls the heater, set to nc if a readonly thermistor is being defined
hotend.thermistor = EPCOS100K # See http://smoothieware.org/temperaturecontrol#toc5
hotend.set_m_code = 104 # M-code to set the temperature for this module
hotend.set_and_wait_m_code = 109 # M-code to set-and-wait for this module
hotend.designator = T # Designator letter for this module
bed.enable = true # Whether to activate this ( "hotend" ) module at all.
bed.thermistor_pin = 0.24 # Pin for the thermistor to read
bed.heater_pin = 2.5 # Pin that controls the heater
bed.thermistor = Honeywell100K # See http://smoothieware.org/temperaturecontrol#thermistor
bed.set_m_code = 140 # M-code to set the temperature for this module
bed.set_and_wait_m_code = 190 # M-code to set-and-wait for this module
bed.designator = B # Designator letter for this module

[switch]
fan.enable = true # Enable this module
fan.input_on_command = M106 # Command that will turn this switch on
fan.input_off_command = M107 # Command that will turn this switch off
fan.output_pin = 2.6 # Pin this module controls
fan.output_type = pwm # PWM output settable with S parameter in the input_on_comand

[zprobe]
enable = false # Set to true to enable a zprobe
probe_pin = 1.28!^ # Pin probe is attached to, if NC remove the !
slow_feedrate = 5 # Mm/sec probe feed rate
fast_feedrate = 100 # Move feedrate mm/sec
probe_height = 5 # How much above bed to start probe

[panel]
enable = false # Set to true to enable the panel code
menu_offset = 0 # Some panels will need 1 here
alpha_jog_feedrate = 6000 # X jogging feedrate in mm/min
beta_jog_feedrate = 6000 # Y jogging feedrate in mm/min
gamma_jog_feedrate = 200 # Z jogging feedrate in mm/min
hotend_temperature = 185 # Temp to set hotend when preheat is selected
bed_temperature = 60 # Temp to set bed when preheat is selected

[custom_menu]
power_on.enable = true #
power_on.name = Power on #
power_on.command = M80 #
power_off.enable = true #
power_off.name = Power off #
power_off.command = M81 #

[network]
enable = false # Enable the ethernet network services
webserver.enable = true # Enable the webserver
telnet.enable = true # Enable the telnet server
ip_address = auto # Use dhcp to get ip address

[uart0]
baud_rate = 115200 # Baud rate for the default hardware ( UART ) serial port

